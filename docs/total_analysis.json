{"posts_with_tags": {"Data Structures and Algorithms": {"tags": ["data structures", "algorithms"], "category": "Data Structures & Algorithms", "link": "data-structures-and-algorithms", "description": "This note contains what I've learned for topics in data structure courses, including time complexity analysis, array, linked list, stack, queue, tree, graph etc."}, "Stanford EE380 New Golden Age for Computer Architecture": {"tags": ["computer architecture", "computer organization", "hardware/software systems", "computer security"], "category": "Computer Systems", "link": "new-golden-age-for-computer-architecture", "description": "A tech talk note from one of 2017 Turing Award Winners.(Prof. John Hennessy and Prof. David Patterson) This talk addresses three topics. 1. History of computer architecture including mainframes, minicomputers, microprocessors, CISC vs. RISC to VLIW 2. Current computer architecture challenges ranging from security issues, slowing down of Moore's law and end of Dennard Scaling 3. Future computer architecture opportunities including DSAs, open architecture(such as RISC-V)"}, "CSE 559W Systems for ML": {"tags": ["deep learning", "machine learning", "hardware/software systems"], "category": "Computer Systems", "link": "cse559w", "description": "This course covers various aspects of deep learning systems, including basics of deep learning, programming models for expressing machine learning models, automatic differentiation, memory optimization, scheduling, distributed learning, hardware acceleration, domain specific languages, and model serving."}, "Operating System": {"tags": ["operating system", "distributed system"], "category": "Computer Systems", "link": "operating-system", "description": "This course is mainly focused on operating system concepts, including process management, memeory management, file system, I/O and distributed systems."}, "Study Less Study Smart": {"tags": ["learning"], "category": "Learning", "link": "studyless-studysmart", "description": "If you spend hours and hours of studying, without improving your grades, or information retention, then learn how to study smart by Marty Lobdell."}, "ES6 Syntax Introduction": {"tags": ["programming", "javascript"], "category": "Programming", "link": "es6-syntax", "description": "You can understand ES6 syntax and differences between ES5 syntax here."}, "Discussing Additional Value of Learning": {"tags": ["learning"], "category": "Learning", "link": "learning-side-benefits", "description": "This article discusses the additional value of learning. I think it might not be the best result if you measure how and what you learn based on C/P value. However, I think we don't need to panic and there is some psychological trick here!"}, "My Second Brain - Knowledge Network": {"tags": ["software engineering", "learning", "ui/ux"], "category": "Learning", "link": "my-second-brain", "description": "This article describes why I build the knowledge network and how I build it and some key decision points inside the process."}, "Paper Reading Using The Three-Pass Approach": {"tags": ["research", "paper reading"], "category": "Research", "link": "paper-reading-using-the-three-pass-approach", "description": "The key idea is that you should read the paper in up to three passes, instead of starting at the beginning and plowing your way to the end. Each pass accomplishes specific goals and builds upon the previous pass, The first pass gives you a general idea about the paper. The second pass lets you grasp the paper\u2019s content, but not its details. The third pass helps you understand the paper in depth."}, "Algorithms Design and Analysis": {"tags": ["algorithms"], "category": "Data Structures & Algorithms", "link": "algorithms-design-and-analysis", "description": "This note contains what I've learned for topics in algorithm design and analysis courses, including time complexity analysis, greedy algorithms, divide and conquer, dynamic programming, algorithms on graphs, algorithms on strings, P/NP etc."}, "Discrete Mathematics": {"tags": ["mathematics", "discrete mathematics", "computer science"], "category": "Mathematics", "link": "discrete-mathematics", "description": "This note contains what I've learned for topics in discrete mathematics courses, including proof techniques, logic, trees, graphs, sets, functions, combinatorics etc."}, "MIT6.031 Software Construction": {"tags": ["software engineering", "programming", "java"], "category": "Software Engineering", "link": "mit6.031", "description": "The prime objective of this course is learning how to write code that is,safe from bugs (SFB), easy to understand (ETU), and ready for change (RFC)."}, "Functional Programming Principles in Scala": {"tags": ["programming", "programming paradigms", "scala"], "category": "Programming", "link": "functional-programming-principles-in-scala", "description": "In this course, you will discover the elements of the functional programming style and learn how to apply them usefully in your daily programming tasks."}, "CS61A Structure and Interpretation of Computer Programs": {"tags": ["programming paradigms", "scheme", "sql", "python"], "category": "Programming", "link": "cs61a", "description": "This course is about managing complexity. It covers several topics, including function abstraction, data abstraction, programming paradigms such as functional programming, object-oriented programming, declarative programming, etc. Besides, this course teaches three programming languages, Python, Scheme, and SQL"}, "N Lessons from Software Development": {"tags": ["programming", "software development"], "category": "Software Engineering", "link": "software-construction-lessons", "description": "This is a breathing article for those lessons learned from software development."}, "Amazing Computational Thinking Lessons": {"tags": ["algorithms", "data structures"], "category": "Data Structures & Algorithms", "link": "amazing-computational-thinking", "description": "This is a breathing note for those amazing algorithmic thinking problems to me. The basics behind the problems are in university-level data structures and algorithms courses."}, "How I Solved Front-end Development Issues at Advantech": {"tags": ["software engineering", "job"], "category": "Software Engineering", "link": "learning-at-advantech", "description": "This is a article for what I've learned the past two years working at Advantech as a front-end developer."}, "Nand2Tetris": {"tags": ["hardware/software systems"], "category": "Computer Systems", "link": "nand2tetris", "description": "The course objective is to integrate key notions from algorithms, computer architecture, operating systems, compilers, and software engineering in one unified framework. This will be done constructively, by building a general-purpose computer system from the ground up."}, "How My Blog Evolve from 0 to 1": {"tags": ["software engineering", "hexo", "ui/ux"], "category": "Software Engineering", "link": "zero-to-one", "description": "This article is for recording the development process of my technical blog and some thought from this process."}, "How to Do Great Research": {"tags": ["research", "paper reading", "paper writing", "research talk", "research proposal"], "category": "Research", "link": "how-to-do-great-research", "description": "This is a breathing article for those articles talking about how to do great research. Although they're mainly focused in the field of computer science, I hope and think you can get common spirit from them. Also really welcome to share with any material related to doing research in the below discussion area!"}, "Computer Architecture": {"tags": ["computer architecture", "computer organization", "assembly", "hardware/software systems"], "category": "Computer Systems", "link": "computer-architecture", "description": "This course is mainly focused relationship among components inside computers, including Von Neumann Architecture, instruction set architecture, CPU design, memory hierarchy, interruption/exception and I/O."}, "Deep Learning System Design and Acceleration": {"tags": ["deep learning", "hardware/software systems"], "category": "Artificial Intelligence", "link": "deep-learning-system-design-acceleration", "description": "This tech talk is about essential conditions for being AI system architects, AI brief history and important lessons learned. Besides, the speaker also talks about the furture possibilities in terms of software and hardware aspects."}, "The Two Cultures of Programming": {"tags": ["programming", "software engineering", "scientific programming"], "category": "Programming", "link": "the-two-cultures-of-programming", "description": "This tech talk note is from JuliaConf in 2016 talking about two cultures of programming, which are two different programming aspects from scientists and programmers."}}, "tags": ["data structures", "algorithms", "computer architecture", "computer organization", "hardware/software systems", "computer security", "deep learning", "machine learning", "operating system", "distributed system", "learning", "programming", "javascript", "software engineering", "ui/ux", "research", "paper reading", "mathematics", "discrete mathematics", "computer science", "java", "programming paradigms", "scala", "scheme", "sql", "python", "software development", "job", "hexo", "paper writing", "research talk", "research proposal", "assembly", "scientific programming"]}